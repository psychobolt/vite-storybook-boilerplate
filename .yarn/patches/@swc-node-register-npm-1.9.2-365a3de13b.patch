diff --git a/esm/esm.mjs b/esm/esm.mjs
index fc67c5c5b80e91e2cda58f772d43947c9292d7af..edf3a813e1ce1105bbfb731b868bb88205393e52 100644
--- a/esm/esm.mjs
+++ b/esm/esm.mjs
@@ -12,7 +12,7 @@ const host = {
     readFile: ts.sys.readFile,
 };
 export const resolve = async (specifier, context, nextResolve) => {
-    if (!AVAILABLE_EXTENSION_PATTERN.test(specifier)) {
+    if (!AVAILABLE_EXTENSION_PATTERN.test(specifier.startsWith('file:') ? fileURLToPath(specifier) : specifier)) {
         return nextResolve(specifier);
     }
     // entrypoint
@@ -49,7 +49,7 @@ const tsconfigForSWCNode = {
     baseUrl: undefined,
 };
 export const load = async (url, context, nextLoad) => {
-    const swcAttribute = context.importAttributes.swc;
+    const swcAttribute = context.importAttributes.swc; 
     if (swcAttribute) {
         delete context.importAttributes.swc;
         const { source } = await nextLoad(url, {
diff --git a/lib/register.js b/lib/register.js
index d4ecace8dc5aa7c31f3f150f4a0f2c314ceb337c..d31339d5d14964c296c84be7b07fec7be854cdcf 100644
--- a/lib/register.js
+++ b/lib/register.js
@@ -30,16 +30,16 @@ const pirates_1 = require("pirates");
 const ts = __importStar(require("typescript"));
 const read_default_tsconfig_1 = require("./read-default-tsconfig");
 const DEFAULT_EXTENSIONS = [
-    ts.Extension.Js,
+    // ts.Extension.Js,
     ts.Extension.Ts,
-    ts.Extension.Jsx,
+    // ts.Extension.Jsx,
     ts.Extension.Tsx,
-    ts.Extension.Mjs,
+    // ts.Extension.Mjs,
     ts.Extension.Mts,
-    ts.Extension.Cjs,
+    // ts.Extension.Cjs,
     ts.Extension.Cts,
-    '.es6',
-    '.es',
+    // '.es6',
+    // '.es',
 ];
 exports.AVAILABLE_TS_EXTENSION_PATTERN = new RegExp(`((?<!\\.d)(${[ts.Extension.Ts, ts.Extension.Tsx, ts.Extension.Mts, ts.Extension.Cts].map((ext) => ext.replace(/^\./, '\\.')).join('|')}))$`, 'i');
 exports.AVAILABLE_EXTENSION_PATTERN = new RegExp(`((?<!\\.d)(${DEFAULT_EXTENSIONS.map((ext) => ext.replace(/^\./, '\\.')).join('|')}))$`, 'i');
