diff --git a/esm/esm.mjs b/esm/esm.mjs
index 1e7429abec21338477f904b17a35161b75d01e19..f0a3db97959040ea925240ed0f7e38bba4dfb0e6 100644
--- a/esm/esm.mjs
+++ b/esm/esm.mjs
@@ -175,10 +175,14 @@ export const load = async (url, context, nextLoad) => {
         debug('loaded: internal format', url);
         return nextLoad(url, context);
     }
+    // workaround for a vscode extension, fallback. See https://github.com/microsoft/vscode/issues/130367
+    if (url.indexOf('.vscode/extensions') > 0) {
+        return nextLoad(url, context);
+    }
     const { source, format: resolvedFormat } = await nextLoad(url, context);
     debug('loaded', url, resolvedFormat);
     const code = !source || typeof source === 'string' ? source : Buffer.from(source).toString();
-    const compiled = await compile(code, url, tsconfigForSWCNode, true);
+    const compiled = await compile(code, url.startsWith('file:') ? fileURLToPath(url) : url, tsconfigForSWCNode, true);
     debug('compiled', url, resolvedFormat);
     return addShortCircuitSignal({
         // for lazy: ts-node think format would undefined, actually it should not, keep it as original temporarily
