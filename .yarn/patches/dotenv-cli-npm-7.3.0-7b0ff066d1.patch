diff --git a/cli.js b/cli.js
index 8ea2b15db9b225df3065eff4e09b35ad623a657a..97bf39c0d11f430cb76155da9d05e23dc70d8e46 100755
--- a/cli.js
+++ b/cli.js
@@ -5,6 +5,7 @@ var path = require('path')
 
 var argv = require('minimist')(process.argv.slice(2))
 var dotenv = require('dotenv')
+var dotenvFlow = require('dotenv-flow')
 var dotenvExpand = require('dotenv-expand').expand
 
 function printHelp () {
@@ -29,7 +30,7 @@ if (argv.help) {
   process.exit()
 }
 
-const override = argv.o || argv.override;
+const override = argv.o || argv.override
 
 if (argv.c && override) {
   console.error('Invalid arguments. Cascading env variables conflicts with overrides.')
@@ -44,15 +45,23 @@ if (argv.e) {
     paths.push(...argv.e)
   }
 } else {
-  paths.push('.env')
+  paths = ['.env']
 }
 
 if (argv.c) {
-  paths = paths.reduce((accumulator, path) => accumulator.concat(
-    typeof argv.c === 'string'
-      ? [`${path}.${argv.c}.local`, `${path}.local`, `${path}.${argv.c}`, path]
-      : [`${path}.local`, path]
-  ), [])
+  paths = paths.reduce(function (accumulator, input) {
+    var filepaths = dotenvFlow.listFiles({ path: input.replace(/\/(\..+)+/, ''), debug: argv.debug })
+    var filepath = path.resolve(path.relative(process.cwd(), input))
+    return accumulator.concat((
+      typeof argv.c === 'string'
+        ? [`${filepath}.${argv.c}.defaults`, filepath, `${filepath}.${argv.c}`, `${filepath}.local`, `${filepath}.${argv.c}.local`]
+        : [`${filepath}.defaults`, filepath, `${filepath}.local`]
+    ).filter(function (filepath) {
+      return filepaths.includes(filepath)
+    }))
+  }, [])
+} else {
+  paths = dotenvFlow.listFiles({ debug: argv.debug })
 }
 
 function validateCmdVariable (param) {
@@ -72,21 +81,17 @@ if (argv.v) {
   }
 }
 var parsedVariables = dotenv.parse(Buffer.from(variables.join('\n')))
+var parsedFile = dotenvFlow.load(paths, { debug: argv.debug, override })
+if (argv.expand !== false) {
+  dotenvExpand(parsedFile)
+}
+Object.assign(process.env, parsedVariables)
 
 if (argv.debug) {
-  console.log(paths)
-  console.log(parsedVariables)
+  console.log(Object.assign({}, parsedFile.parsed, parsedVariables))
   process.exit()
 }
 
-paths.forEach(function (env) {
-  var parsedFile = dotenv.config({ path: path.resolve(env), override })
-  if (argv.expand !== false) {
-    dotenvExpand(parsedFile)
-  }
-})
-Object.assign(process.env, parsedVariables)
-
 if (argv.p) {
   var value = process.env[argv.p]
   console.log(value != null ? value : '')
