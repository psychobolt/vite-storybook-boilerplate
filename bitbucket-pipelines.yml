image: node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e

definitions:
  services:
    docker:
      memory: 7128
  caches:
    yarn:
      key:
        files:
          - yarn.lock
      path: .temp/.yarn/berry/cache
    pnpm:
      key:
        files:
          - apps/svelte-app/yarn.lock
          - yarnrc.yml
      path: .temp/.yarn/berry/cache
    unplugged:
      key:
        files:
          - packages/unplugged/yarn.lock
      path: packages/unplugged/node_modules
  conditions:
    - condition: &html-ui-changed
        changesets:
          includePaths:
            - package.json
            - packages/commons/**
            - packages/stylelint-config/**
            - packages/html-ui/**
    - condition: &react-ui-changed
        changesets:
          includePaths:
            - package.json
            - packages/commons/**
            - packages/stylelint-config/**
            - packages/html-ui/**
            - packages/react-ui/**
    - condition
  scripts:
    - script: &git-auth |
        git remote set-url origin https://x-token-auth:${CI_BOT_USER_TOKEN}@bitbucket.org/${BITBUCKET_REPO_FULL_NAME}.git
        git config user.email "${CI_BOT_USER_ID}@bots.bitbucket.org"
    - script: &env |
        export YARN_GLOBAL_FOLDER=.temp/.yarn/berry
        echo "YARN_GLOBAL_FOLDER=$YARN_GLOBAL_FOLDER" >> .env
    - script: &setup |
        nvm install
        corepack enable
        yarn install
    - script: &lint |
        set +e
        if [ "$WORKSPACE" ]; then
          yarn $WORKSPACE turbo run lint -- -f bitbucket
          export REPORT_STATUS=$?
        else
          yarn turbo run //#lint -- -f bitbucket
          export REPORT_STATUS=$?
        fi
        set -e
    - script: &test |
        yarn $WORKSPACE turbo run coverage
    - script: &test-runner |
        set -o pipefail
        npx concurrently -k -s first -n "SB,TEST" "yarn $WORKSPACE turbo run start -- --silent" "npx wait-on $(yarn $WORKSPACE g:dotenv-get SB_URL | tail -n1) && yarn $WORKSPACE coverage"
    - script: &chromatic |
        if [[ "$BITBUCKET_BRANCH" == main || "$BITBUCKET_BRANCH" == release-* ]]; then
          yarn $WORKSPACE turbo run build-storybook
          yarn $WORKSPACE chromatic --auto-accept-changes --zip
        else
          yarn $WORKSPACE turbo run chromatic -- --zip
        fi
    - script: &report |
        curl --request PUT "https://api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_FULL_NAME}/commit/${BITBUCKET_COMMIT}/reports/${PACKAGE_NAME}/" \
          --header "Authorization: Bearer $CI_BOT_USER_TOKEN" \
          --header 'Accept: application/json' \
          --header 'Content-Type: application/json' \
          --data @${WORKSPACE:-.}/bitbucket-report.json \
          --fail-with-body
        export ANNOTATIONS_FILE="${WORKSPACE:-.}/bitbucket-annotations.json"
        if [[ $(cat ${ANNOTATIONS_FILE} | jq 'length') > 0 ]]; then
          curl --request POST \
            --url "https://api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_FULL_NAME}/commit/${BITBUCKET_COMMIT}/reports/${PACKAGE_NAME}/annotations/" \
            --header "Authorization: Bearer $CI_BOT_USER_TOKEN" \
            --header 'Accept: application/json' \
            --header 'Content-Type: application/json' \
            --data @${ANNOTATIONS_FILE} \
            --fail-with-body
        fi
        [ ${REPORT_STATUS:-0} = 0 ] && true || exit $REPORT_STATUS
    - script: &release |
        if [ "$RELEASE_TAGS" ]; then
          RELEASE_TAG=$( echo "$RELEASE_TAGS" | jq -r --arg keyvar "$BITBUCKET_BRANCH" --arg tag "$RELEASE_TAG" '.[$keyvar] // $tag' )
        fi

        if [ "$RELEASE_TAG" == "{branch}" ]; then
          RELEASE_TAG="$BITBUCKET_BRANCH"
        fi

        RELEASE_TAG=$(echo "$RELEASE_TAG" | sed 's/\//_/g')

        BASE_REF="HEAD"
        if [[ "$STABLE" = true && "$BASE_REF_NAME" ]]; then
          BASE_REF="$BASE_REF_NAME"
        elif [[ "$BITBUCKET_BRANCH" == cherry-pick-* ]]; then
          PARTS=(${BITBUCKET_BRANCH//-/ })
          COUNT=${#PARTS[@]}
          COUNT=$((COUNT - 2))
          BASE_REF+="~$COUNT"
        elif [[ "$BITBUCKET_PR_DESTINATION_BRANCH" ]]; then
          BASE_REF=origin/$BITBUCKET_PR_DESTINATION_BRANCH
        else
          BASE_REF+="~1"
        fi

        if [ "$BASE_REF" ]; then
          echo BASE_REF="$BASE_REF" >> .env
        fi

        SEMVER=$(yarn apply-versions --strategy $STRATEGY)
        if [[ "$SEMVER" != "{}" ]]; then
          echo $SEMVER
          yarn build
        fi

        if [[ "$STRATEGY" != "build" ]]; then
          message="[skip ci] [DEV] Stable release"
          if [[ "$STRATEGY" == "launch" ]]; then
            message="[DEV] Launch release"
          fi
          git add .
          git commit -m "$message" || true
        fi

        if [[ "$SEMVER" != "{}" ]]; then
          if [ "$RELEASE_TAG" ]; then
            if [[ "$BITBUCKET_BRANCH" == main || "$BITBUCKET_BRANCH" == release/* ]]; then
              git tag -d "$RELEASE_TAG" || true
              git push origin --delete "$RELEASE_TAG" || true
              git tag "$RELEASE_TAG" -am "$SEMVER"
              git push origin "$RELEASE_TAG"
            fi
          fi
          yarn workspaces foreach -A --no-private --dry-run npm publish --tolerate-republish ${RELEASE_TAG:+--tag $RELEASE_TAG}
        fi

pipelines:
  default:
    - parallel:
        - step: &code-report
            name: Code Report
            type: pipeline
            custom: code-report
            script:
              - echo "Running Code Report..."
        - step: &publish
            name: Release
            type: pipeline
            custom: release
            script:
              - echo "Publishing..."
  branches:
    '{main,release/*}':
      - parallel:
          - step: *code-report
          - step: &deploy
              name: Deploy
              type: pipeline
              custom: deploy
              script:
                - echo "Deploying..."
          - step: *publish
  pull-requests:
    '**':
      - step:
          name: Prepare Version Strategy
          image: atlassian/default-image:5@sha256:71fab98cf1691e17ca5dd59b5ce8356110a3f18854f58a729c220eca36a83e3d
          max-time: 15
          size: 2x
          caches:
            - pnpm
            - unplugged
          clone:
            enabled: true
            depth: 75
          script:
            - *env
            - git fetch --depth=1 origin $BITBUCKET_PR_DESTINATION_BRANCH
            - echo "BASE_REF=origin/$BITBUCKET_PR_DESTINATION_BRANCH" >> .env
            - nvm install
            - corepack enable
            - set +e
            - yarn version check
            - export REPORT_STATUS=$?
            - set -e
            - '[ $REPORT_STATUS = 0 ] && exit 0 || true'
            - >-
              [[ "$BITBUCKET_BRANCH" != issue/* && "$BITBUCKET_BRANCH" !=
              feature/* ]] && exit 1 || true
            - >-
              export APPLY_STRATEGY=$( [[ "$BITBUCKET_BRANCH" == issue/* ]] &&
              echo "patch" || echo "minor" )
            - *git-auth
            - git fetch --depth=1 origin $BITBUCKET_PR_DESTINATION_BRANCH
            - echo "BASE_REF=origin/$BITBUCKET_PR_DESTINATION_BRANCH" >> .env
            - yarn install
            - yarn bootstrap
            - rm -rf .yarn/versions || true
            - export SEMVER=$( yarn apply-versions --strategy $APPLY_STRATEGY )
            - git stash
            - |
              if [[ "$SEMVER" && "$SEMVER" != "{}" ]]; then
                yarn workspaces foreach -A --no-private exec 'test $(echo $SEMVER | jq .\"$npm_package_name\") = null || yarn version $APPLY_STRATEGY --deferred'
                git add .
                git commit -m "[skip ci] [DEV] Add Version Strategy"
                git push
              fi
      - step: *deploy
  custom:
    code-report:
      - step:
          name: Lint and Test Root
          image: atlassian/default-image:5@sha256:71fab98cf1691e17ca5dd59b5ce8356110a3f18854f58a729c220eca36a83e3d
          max-time: 10
          size: 2x
          caches:
            - yarn
          script:
            - *env
            - export PACKAGE_NAME=ui-kitchen-sink
            - *setup
            - *lint
            - *report
      - parallel:
          - step:
              name: Lint and Test Commons
              image: atlassian/default-image:5@sha256:71fab98cf1691e17ca5dd59b5ce8356110a3f18854f58a729c220eca36a83e3d
              max-time: 10
              size: 2x
              condition:
                changesets:
                  includePaths:
                    - package.json
                    - packages/commons/**
              caches:
                - yarn
              script:
                - *env
                - export WORKSPACE=packages/commons
                - export PACKAGE_NAME=commons
                - *setup
                - *lint
                - *test
                - *report
          - step:
              name: Lint and Test Stylelint Config
              image: atlassian/default-image:5@sha256:71fab98cf1691e17ca5dd59b5ce8356110a3f18854f58a729c220eca36a83e3d
              max-time: 10
              size: 2x
              condition:
                changesets:
                  includePaths:
                    - *env
                    - package.json
                    - packages/commons/**
                    - packages/stylelint-config/**
              caches:
                - yarn
              script:
                - *env
                - export WORKSPACE=packages/stylelint-config
                - export PACKAGE_NAME=stylelint-config
                - *setup
                - *lint
                - *test
                - *report
          - step:
              name: Lint and Test HTML UI
              image: atlassian/default-image:5@sha256:71fab98cf1691e17ca5dd59b5ce8356110a3f18854f58a729c220eca36a83e3d
              max-time: 10
              size: 2x
              caches:
                - yarn
              clone:
                enabled: true
                depth: 75
              condition: *html-ui-changed
              script:
                - *env
                - export WORKSPACE=packages/html-ui
                - export PACKAGE_NAME=html-ui
                - *setup
                - yarn playwright install --with-deps chromium
                - *lint
                - *test-runner
                - *report
          - step:
              name: Lint and Test React UI
              image: atlassian/default-image:5@sha256:71fab98cf1691e17ca5dd59b5ce8356110a3f18854f58a729c220eca36a83e3d
              max-time: 10
              size: 2x
              caches:
                - yarn
              clone:
                enabled: true
                depth: 75
              condition: *react-ui-changed
              script:
                - *env
                - export WORKSPACE=packages/react-ui
                - export PACKAGE_NAME=react-ui
                - *setup
                - yarn playwright install --with-deps chromium
                - *lint
                - *test
                - *report
          - step:
              name: Lint and Test Next App
              max-time: 15
              size: 2x
              caches:
                - yarn
              condition:
                changesets:
                  includePaths:
                    - package.json
                    - packages/commons/**
                    - packages/html-ui/**
                    - packages/react-ui/**
                    - apps/next-app/**
              script:
                - *env
                - export WORKSPACE=apps/next-app
                - export PACKAGE_NAME=next-app
                - yarn install
                - yarn $WORKSPACE turbo run lint
                - *test
          - step:
              name: Lint and Test Svelte App
              image: atlassian/default-image:5@sha256:71fab98cf1691e17ca5dd59b5ce8356110a3f18854f58a729c220eca36a83e3d
              max-time: 15
              size: 2x
              caches:
                - pnpm
                - unplugged
              condition:
                changesets:
                  includePaths:
                    - package.json
                    - bin/bootstrap.ts
                    - packages/commons/**
                    - packages/html-ui/**
                    - apps/svelte-app/**
              script:
                - *env
                - export WORKSPACE=apps/svelte-app
                - export PACKAGE_NAME=svelte-app
                - *setup
                - yarn bootstrap
                - *lint
                - *test
                - *report
    deploy:
      - step:
          name: Deploy HTML UI
          image: atlassian/default-image:5@sha256:71fab98cf1691e17ca5dd59b5ce8356110a3f18854f58a729c220eca36a83e3d
          max-time: 5
          size: 2x
          caches:
            - yarn
          condition: *html-ui-changed
          script:
            - *env
            - export WORKSPACE=packages/html-ui
            - export PACKAGE_NAME=html-ui
            - *setup
            - *chromatic
      - step:
          name: Deploy React UI
          image: atlassian/default-image:5@sha256:71fab98cf1691e17ca5dd59b5ce8356110a3f18854f58a729c220eca36a83e3d
          max-time: 5
          size: 2x
          caches:
            - yarn
          condition: *react-ui-changed
          script:
            - *env
            - export WORKSPACE=packages/react-ui
            - export PACKAGE_NAME=react-ui
            - *setup
            - *chromatic
    release:
      - step:
          name: Release
          image: atlassian/default-image:5@sha256:71fab98cf1691e17ca5dd59b5ce8356110a3f18854f58a729c220eca36a83e3d
          max-time: 25
          size: 2x
          caches:
            - pnpm
            - unplugged
          clone:
            enabled: true
            depth: 75
          condition:
            changesets:
              includePaths:
                - .yarn/versions/**
                - apps/**
                - packages/**
          script:
            - *env
            - >-
              export STABLE=$( [[ "$BITBUCKET_BRANCH" == release-* ]] && echo
              "true" || echo "false" )
            - >-
              export STRATEGY=$( [ "$STABLE" = true ] &&   echo "stable" || echo
              "build" )
            - *git-auth
            - |
              if [ "$STABLE" = true ]; then
                git fetch --depth=50 origin "$BASE_REF_NAME:$BASE_REF_NAME"
              fi
            - *setup
            - yarn bootstrap
            - *release
            - '[ "$STABLE" = true ] && git push || true'
    launch:
      - variables:
          - name: REF_NAME
            description: The branch name you wish to create for the release
            default: release/
      - step:
          name: Create new releases
          image: atlassian/default-image:5@sha256:71fab98cf1691e17ca5dd59b5ce8356110a3f18854f58a729c220eca36a83e3d
          max-time: 15
          size: 2x
          caches:
            - pnpm
            - unplugged
          clone:
            enabled: true
            depth: full
          script:
            - *env
            - export STABLE=true
            - export STRATEGY=launch
            - export BASE_REF_NAME=$(git branch --show-current)
            - *git-auth
            - *setup
            - yarn bootstrap
            - *release
            - git push
            - git checkout -b $REF_NAME
            - git push --set-upstream origin $REF_NAME
    prepare:
      - variables:
          - name: COMMITS
            description:
              One or more commits that you wish to cherry-pick into the target
              branch
      - step:
          name: Create a PR with cherry-picked commits
          image: atlassian/default-image:5@sha256:71fab98cf1691e17ca5dd59b5ce8356110a3f18854f58a729c220eca36a83e3d
          max-time: 15
          clone:
            enabled: true
            depth: 75
          script:
            - *env
            - *git-auth
            - export BASE_REF_NAME=$(git branch --show-current)
            - |
              source ./bin/git-ls-unmerged.sh
              export SHORT=$OUTPUT
            - export BASE_REF=cherry-pick-$SHORT
            - '[ ! $REF ] && exit 1 || true'
            - git fetch --depth=2 origin $REF
            - git cherry-pick -x $REF || true
            - git add .
            - git cherry-pick --continue || true
            - git checkout -b $BASE_REF
            - git push -u origin $BASE_REF
            - >-
              curl
              https://api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_FULL_NAME}/pullrequests
                --header 'Authorization: Bearer $CI_BOT_USER_TOKEN' \
                --request POST \
                --header \
                  "Content-Type: application/json" --data "{
                    \"title\": \"Cherry Pick ${SHORT//-/ } into $BASE_REF_NAME\",
                    \"source\": {
                      \"branch\": {
                        \"name\": \"$BASE_REF\"
                      }
                    },
                    \"destination\": {
                      \"branch\": {
                        \"name\": \"$BASE_REF_NAME\"
                      }
                    },
                    \"reviewers\": [
                      {
                        \"uuid\": \"$BITBUCKET_STEP_TRIGGERER_UUID\"
                      }
                    ],
                    \"close_source_branch\": true
                  }" \
                --fail-with-body
    renovate:
      - step:
          image: renovate/renovate:latest@sha256:2b4a24b9799fb4421fc5fd9fec2fda5fa10abbe7469d509305e27b5e3953fc4c
          size: 2x
          caches:
            - yarn
          script:
            - *env
            - set -o pipefail
            - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
            - set +e
            - . ~/.nvm/nvm.sh
            - export REPORT_STATUS=$?
            - set -e
            - '[ $REPORT_STATUS != 0 ] && exit $REPORT_STATUS || true'
            - *setup
            - export LOG_LEVEL=debug
            - export RENOVATE_CONFIG_FILE=renovate.config.cjs
            - export RENOVATE_POST_UPGRADE_WORKSPACES=$(yarn ls-workspaces --node-linker=pnpm --node-linker=node-modules)
            - export RENOVATE_REPOSITORIES=${BITBUCKET_REPO_FULL_NAME}
            - renovate
