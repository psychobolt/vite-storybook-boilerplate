name: Release

on:
  workflow_call:
    inputs:
      ref_name:
        type: string
      head_ref:
        type: string
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  release:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment: ${{ (contains(fromJson('["main", "next"]'), inputs.ref_name || github.ref_name) || startsWith(inputs.ref_name || github.ref_name, 'release-')) && (inputs.ref_name || github.ref_name) || null }}
    env:
      REF_NAME: ${{ inputs.ref_name || github.ref_name }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_TELEMETRY_DISABLED: 1
      YARN_ENABLE_HARDENED_MODE: 0
    steps:
      - name: Get token
        id: get_token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          private-key: ${{ secrets.BOT_APP_PRIVATE_KEY }}
          app-id: ${{ secrets.BOT_APP_ID }}
      - name: Get GitHub App User ID
        id: get_user_id
        env:
          GH_TOKEN: ${{ steps.get_token.outputs.token }}
        run: echo "user-id=$(gh api "/users/${{ steps.get_token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
      - name: Configure git
        run: |
          git config --global user.name ${{ steps.get_token.outputs.app-slug }}[bot]
          git config --global user.email ${{ steps.get_user_id.outputs.user-id }}+${{ steps.get_token.outputs.app-slug }}[bot]@users.noreply.github.com
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: ${{ startsWith(env.REF_NAME, 'release-') && 50 || 2 }}
          ref: ${{ inputs.ref_name || github.ref }}
      - name: Fetch ${{ vars.BASE_REF_NAME }}
        if: startsWith(env.REF_NAME, 'release-')
        run: git fetch --depth=50 origin ${{ vars.BASE_REF_NAME }}:${{ vars.BASE_REF_NAME }}
      - name: Set Yarn global folder
        env:
          YARN_GLOBAL_FOLDER: ${{ runner.temp }}/.yarn/berry
        run: echo "YARN_GLOBAL_FOLDER=$YARN_GLOBAL_FOLDER" >> .env
      - name: Setup Node.js environment
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: lts/Hydrogen
          cache: yarn
          cache-dependency-path: '**/yarn.lock'
      - name: Override BASE_REF variable
        run: echo "BASE_REF=${{ startsWith(env.REF_NAME, 'release-') && vars.BASE_REF_NAME || inputs.head_ref || 'HEAD~1' }}" >> .env
      - name: Start Turbo Cache Server
        uses: rharkor/caching-for-turbo@a1c4079258ae08389be75b57d4d7a70f23c1c66d # v1.8
        with:
          cache-prefix: ${{ vars.TURBO_CACHE_PREFIX }}
      - name: Install dependencies
        run: |
          yarn install
          yarn bootstrap
      - name: ${{ startsWith(env.REF_NAME, 'release-') && 'Stable' || 'Dark' }} Release
        uses: ./.github/actions/release
        with:
          strategy: ${{ startsWith(env.REF_NAME, 'release-') && 'stable' || 'build' }}
          tag: ${{ vars.RELEASE_TAG == '{branch}' && env.REF_NAME || vars.RELEASE_TAG }}
          npm_registry_url: ${{ vars.NPM_REGISTRY_URL }}
          npm_auth_token: ${{ secrets.NPM_AUTH_TOKEN || secrets.GITHUB_TOKEN }}
          dry_run_publish: ${{ startsWith(env.REF_NAME, 'renovate/') && 'true' || vars.DRY_RUN_PUBLISH }}
      - name: Push
        if: startsWith(env.REF_NAME, 'release-')
        run: git push
