name: ci

on:
  push:
    branches: 
      - main
      - develop
      - release-*
  workflow_call:
    inputs:
      ref_name:
        type: string
      base_ref:
        type: string
      head_ref:
        type: string
      diff_count:
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ inputs.ref_name || github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_VERBOSITY: ${{ vars.TURBO_VERBOSITY || 0 }}
      TURBO_ENV_MODE: ${{ vars.TURBO_ENV_MODE || 'strict' }}
      TURBO_TELEMETRY_DISABLED: 1
      YARN_ENABLE_HARDENED_MODE: 0
    steps:
      - name: Check out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          ref: ${{ inputs.ref_name || github.ref }}
      - name: Setup Node.js environment
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: lts/*
          cache: yarn
          cache-dependency-path: ./yarn.lock
      - name: Install dependencies
        run: yarn install
      - name: Start Turbo Cache Server
        uses: rharkor/caching-for-turbo@2e8eba6ca57bfcd5619416cfd1ad79f581901040
        with:
          cache-prefix: ${{ vars.TURBO_CACHE_PREFIX }}
      - name: Lint
        run: yarn turbo run //#lint --env-mode=${{ env.TURBO_ENV_MODE }} --verbosity=${{ env.TURBO_VERBOSITY }}

  diff:
    name: List Updated Packages
    timeout-minutes: 15
    runs-on: ubuntu-latest
    outputs:
      package_names: ${{ steps.changes.outputs.package_names }}
      force: ${{ steps.filter.outputs.force }}
    steps:
      - name: Check out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: ${{ inputs.diff_count || 2 }}
          ref: ${{ inputs.ref_name || github.ref }}
      - name: Setup Node.js environment
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: lts/*
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: filter
        with:
          filters: |
            versions:
              - '.yarn/versions/**'
            force:
              - '.github/**'
          base: ${{ inputs.base_ref || github.base_ref }}
          initial-fetch-depth: 1
      - name: Copy version files
        if: steps.filter.outputs.versions == 'true'
        run: |
          mkdir -p packages/commons/.yarn/versions
          cp -r .yarn/versions packages/commons/.yarn/versions
      - name: Install Turbo
        if: steps.filter.outputs.force == 'false'
        run: |
          npm install -g turbo@$(jq -r .devDependencies.turbo package.json)
          turbo --version
      - name: Fetch base branch
        if: steps.filter.outputs.force == 'false' && github.event_name == 'pull_request'
        run: git fetch --depth=1 origin ${{ github.base_ref }}:${{ github.base_ref }}
      - name: Start Turbo Cache Server # TODO: Verify if this is needed for dry-run
        if: steps.filter.outputs.force == 'false'
        uses: rharkor/caching-for-turbo@2e8eba6ca57bfcd5619416cfd1ad79f581901040
        with:
          cache-prefix: ${{ vars.TURBO_CACHE_PREFIX }}
      - name: Collect Turborepo Changes
        if: steps.filter.outputs.force == 'false'
        id: changes
        uses: 94726/action-turborepo-changes@6bb75425be5455ba39431196f12e246a2f37d375 # v1.1.1
        env:
          TURBO_TELEMETRY_DISABLED: 1
        with:
          from: ${{ inputs.head_ref || github.base_ref || 'HEAD~1' }}

  apps:
    needs: diff
    uses: ./.github/workflows/apps.yml
    secrets: inherit
    with:
      ref_name: ${{ inputs.ref_name }}
      base_ref: ${{ inputs.base_ref || github.base_ref }}
      head_ref: ${{ github.head_ref }}
      package_names: ${{ needs.diff.outputs.package_names }}
      force: ${{ needs.diff.outputs.force == 'true' }}

  packages:
    needs: diff
    uses: ./.github/workflows/packages.yml
    secrets: inherit
    with:
      ref_name: ${{ inputs.base_ref || github.base_ref }}
      package_names: ${{ needs.diff.outputs.package_names }}
      force: ${{ needs.diff.outputs.force == 'true' }}

  release:
    needs: [apps, packages]
    if: needs.apps.outputs.release == 'true' || needs.packages.outputs.release == 'true'
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment: ${{ (contains(fromJson('["main", "develop"]'), inputs.ref_name || github.ref_name) || startsWith(inputs.ref_name || github.ref_name, 'release-')) && (inputs.ref_name || github.ref_name) || null }}
    env:
      REF_NAME: ${{ inputs.ref_name || github.ref_name }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_TELEMETRY_DISABLED: 1
      YARN_ENABLE_HARDENED_MODE: 0
    steps:
      - name: Configure git
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Check out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: ${{ startsWith(env.REF_NAME, 'release-') && 50 || 2 }}
          ref: ${{ inputs.ref_name || github.ref }}
      - name: Fetch ${{ vars.BASE_REF_NAME }}
        if: startsWith(env.REF_NAME, 'release-')
        run: git fetch --depth=50 origin ${{ vars.BASE_REF_NAME }}:${{ vars.BASE_REF_NAME }}
      - name: Setup Node.js environment
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: lts/*
          cache: yarn
          cache-dependency-path: '**/yarn.lock'
      - name: Override BASE_REF variable
        run: echo "BASE_REF=${{ startsWith(env.REF_NAME, 'release-') && vars.BASE_REF_NAME || inputs.head_ref || 'HEAD~1' }}" >> .env
      - name: Start Turbo Cache Server
        uses: rharkor/caching-for-turbo@2e8eba6ca57bfcd5619416cfd1ad79f581901040
        with:
          cache-prefix: ${{ vars.TURBO_CACHE_PREFIX }}
      - name: Install dependencies
        run: |
          yarn install
          yarn bootstrap
      - name: ${{ startsWith(env.REF_NAME, 'release-') && 'Stable' || 'Dark' }} Release
        uses: ./.github/actions/release
        with:
          strategy: ${{ startsWith(env.REF_NAME, 'release-') && 'stable' || 'build' }}
          tag: ${{ vars.RELEASE_TAG }}
          dry_run_publish: true
      - name: Push
        if: startsWith(env.REF_NAME, 'release-')
        run: git push
