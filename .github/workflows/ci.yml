name: ci

on:
  push:
  workflow_call:
    inputs:
      ref_name:
        type: string
        required: true
      base_ref:
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ inputs.ref_name || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      TURBO_REMOTE_ONLY: true
      YARN_ENABLE_GLOBAL_CACHE: false
    steps:
      - name: Check out code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          ref: ${{ inputs.ref_name || github.ref }}
      - name: Setup Node.js environment
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4
        with:
          node-version: lts/*
          cache: yarn
          cache-dependency-path: ./yarn.lock
      - name: Install dependencies
        run: yarn install
      - name: Lint
        run: yarn turbo run //#lint

  diff:
    name: List Updated Packages
    timeout-minutes: 15
    runs-on: ubuntu-latest
    outputs:
      package_names: ${{ steps.changes.outputs.package_names }}
    steps:
      - name: Check out code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: 2
          ref: ${{ inputs.ref_name || github.ref }}
      - uses: dorny/paths-filter@v2
        id: versions
        with:
          filters: |
            changed:
              - '.yarn/versions/**'
      - name: Copy version files
        if: steps.versions.outputs.changed == 'true'
        run: |
          mkdir -p packages/commons/.yarn/versions
          cp -r .yarn/versions packages/commons/.yarn/versions
      - name: Collect Turborepo Changes
        id: changes
        uses: 94726/action-turborepo-changes@ddd415d29f9af6399f93c4577706b93f4b6c13d5 # v1.1.0
        with:
          from: HEAD~1

  apps:
    needs: diff
    uses: ./.github/workflows/apps.yml
    secrets: inherit
    with:
      ref_name: ${{ inputs.ref_name }}
      package_names: ${{ needs.diff.outputs.package_names }}

  packages:
    needs: diff
    uses: ./.github/workflows/packages.yml
    secrets: inherit
    with:
      ref_name: ${{ inputs.ref_name }}
      package_names: ${{ needs.diff.outputs.package_names }}

  release:
    needs: [apps, packages]
    if: needs.apps.outputs.release == 'true' || needs.packages.outputs.release == 'true'
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment: ${{ (contains(fromJson('["main", "develop"]'), inputs.ref_name || github.ref_name) || startsWith(inputs.ref_name || github.ref_name, 'release-')) && (inputs.ref_name || github.ref_name) || null }}
    env:
      REF_NAME: ${{ inputs.ref_name || github.ref_name }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      TURBO_REMOTE_ONLY: true
      YARN_ENABLE_GLOBAL_CACHE: false
    steps:
      - name: Configure git
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Check out code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: ${{ startsWith(env.REF_NAME, 'release-') && 50 || 2 }}
          ref: ${{ inputs.ref_name || github.ref }}
      - name: Fetch ${{ vars.BASE_REF_NAME }}
        if: startsWith(env.REF_NAME, 'release-')
        run: git fetch --depth=50 origin ${{ vars.BASE_REF_NAME }}:${{ vars.BASE_REF_NAME }}
      - name: Setup Node.js environment
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4
        with:
          node-version: lts/*
          cache: yarn
          cache-dependency-path: "**/yarn.lock"
      - name: Override BASE_REF variable
        run: echo "BASE_REF=${{ startsWith(env.REF_NAME, 'release-') && vars.BASE_REF_NAME || inputs.base_ref || 'HEAD~1' }}" >> .env
      - name: Install dependencies
        run: |
          yarn install
          yarn bootstrap
      - name: ${{ startsWith(env.REF_NAME, 'release-') && 'Stable' || 'Dark' }} Release
        uses: ./.github/actions/release
        with:
          strategy: ${{ startsWith(env.REF_NAME, 'release-') && 'stable' || 'build' }}
          tag: ${{ vars.RELEASE_TAG }}
          dry_run_publish: true
      - name: Push
        if: startsWith(env.REF_NAME, 'release-')
        run: git push

  finish:
    needs: [build, diff, apps, packages, release]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: "Check status of all required jobs"
        run: |-
          NEEDS_CONTEXT='${{ toJson(needs) }}'
          JOB_IDS=$(echo "$NEEDS_CONTEXT" | jq -r 'keys[]')
          for JOB_ID in $JOB_IDS; do
            RESULT=$(echo "$NEEDS_CONTEXT" | jq -r ".[\"$JOB_ID\"].result")
            echo "$JOB_ID job result: $RESULT"
            if [[ "$RESULT" != "success" && "$RESULT" != "skipped" ]]; then
              echo "***"
              echo "Error: The $JOB_ID job did not pass."
              exit 1
            fi
          done
          echo "All jobs passed or were skipped."
