name: ci

on:
  push:
    branches:
      - main
      - develop
      - release-*
  workflow_call:
    inputs:
      ref:
        type: string
      ref_name:
        type: string
      base_ref:
        type: string
      head_ref:
        type: string
      diff_count:
        type: string
  workflow_dispatch:
    inputs:
      ref_name:
        type: string
      base_ref:
        type: string
      head_ref:
        type: string
      diff_count:
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ inputs.ref_name || github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_VERBOSITY: ${{ vars.TURBO_VERBOSITY || 0 }}
      TURBO_ENV_MODE: ${{ vars.TURBO_ENV_MODE || 'strict' }}
      TURBO_TELEMETRY_DISABLED: 1
      YARN_ENABLE_HARDENED_MODE: 0
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ inputs.ref_name || github.ref }}
      - name: Set Yarn global folder
        env:
          YARN_GLOBAL_FOLDER: ${{ runner.temp }}/.yarn/berry
        run: |
          echo "YARN_GLOBAL_FOLDER=$YARN_GLOBAL_FOLDER" >> .env
          echo "YARN_GLOBAL_FOLDER=$YARN_GLOBAL_FOLDER" >> $GITHUB_ENV
        shell: bash
      - name: Setup Node.js environment
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          node-version: lts/Hydrogen
          cache: yarn
          cache-dependency-path: ./yarn.lock
      - name: Install dependencies
        run: yarn install
      - name: Start Turbo Cache Server
        uses: rharkor/caching-for-turbo@c3de885e542eec7eb01eb1a6a59e97c7a2448615 # v1.6
        with:
          cache-prefix: ${{ vars.TURBO_CACHE_PREFIX }}
      - name: Lint
        run: yarn turbo run //#lint --env-mode=${{ env.TURBO_ENV_MODE }} --verbosity=${{ env.TURBO_VERBOSITY }}

  diff:
    name: List Updated Packages
    timeout-minutes: 15
    runs-on: ubuntu-latest
    env:
      BASE_REF: ${{ inputs.base_ref || github.base_ref }}
      TURBO_GLOBAL_WARNING_DISABLED: 1
    outputs:
      package_names: ${{ steps.changes.outputs.package_names }}
      release: ${{ steps.filter.outputs.release }}
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: ${{ inputs.diff_count || 2 }}
          ref: ${{ inputs.ref_name || github.ref }}
      - name: Fetch base branch
        if: env.BASE_REF != ''
        run: git fetch --depth=1 origin ${{ env.BASE_REF }}:base_branch
      - name: Setup Node.js environment
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          node-version: lts/Hydrogen
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: filter
        with:
          filters: |
            release:
              - '.yarn/versions/**'
          base: ${{ inputs.head_ref || (env.BASE_REF && 'base_branch') || '' }}
          ref: ${{ inputs.ref_name }}
          initial-fetch-depth: ${{ inputs.diff_count || 1 }}
      - name: Install Turbo
        run: |
          TURBO_VERSION=$(jq -r .devDependencies.turbo package.json)
          echo "Installing $TURBO_VERSION"
          npm install -g turbo@$TURBO_VERSION
          turbo bin
          turbo --version
      - name: Start Turbo Cache Server
        uses: rharkor/caching-for-turbo@c3de885e542eec7eb01eb1a6a59e97c7a2448615 # v1.6
        with:
          cache-prefix: ${{ vars.TURBO_CACHE_PREFIX }}
      - name: Collect Turborepo Changes
        id: changes
        uses: 94726/action-turborepo-changes@6bb75425be5455ba39431196f12e246a2f37d375 # v1.1.1
        env:
          TURBO_TELEMETRY_DISABLED: 1
        with:
          from: ${{ inputs.head_ref || (env.BASE_REF && 'base_branch') || 'HEAD~1' }}

  apps:
    needs: diff
    uses: ./.github/workflows/apps.yml
    secrets: inherit
    with:
      ref_name: ${{ inputs.ref_name }}
      base_ref: ${{ inputs.base_ref || github.base_ref }}
      package_names: ${{ needs.diff.outputs.package_names }}

  packages:
    needs: diff
    uses: ./.github/workflows/packages.yml
    secrets: inherit
    with:
      ref: ${{ inputs.ref }}
      ref_name: ${{ inputs.ref_name }}
      package_names: ${{ needs.diff.outputs.package_names }}

  release:
    needs: [diff, test, apps, packages]
    if: always() && !contains(needs.*.result, 'cancelled') && !contains(needs.*.result, 'failure') && contains(needs.*.outputs.release, 'true')
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment: ${{ (contains(fromJson('["main", "develop"]'), inputs.ref_name || github.ref_name) || startsWith(inputs.ref_name || github.ref_name, 'release-')) && (inputs.ref_name || github.ref_name) || null }}
    env:
      REF_NAME: ${{ inputs.ref_name || github.ref_name }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_TELEMETRY_DISABLED: 1
      YARN_ENABLE_HARDENED_MODE: 0
    steps:
      - name: Configure git
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: ${{ startsWith(env.REF_NAME, 'release-') && 50 || 2 }}
          ref: ${{ inputs.ref_name || github.ref }}
      - name: Fetch ${{ vars.BASE_REF_NAME }}
        if: startsWith(env.REF_NAME, 'release-')
        run: git fetch --depth=50 origin ${{ vars.BASE_REF_NAME }}:${{ vars.BASE_REF_NAME }}
      - name: Set Yarn global folder
        env:
          YARN_GLOBAL_FOLDER: ${{ runner.temp }}/.yarn/berry
        run: |
          echo "YARN_GLOBAL_FOLDER=$YARN_GLOBAL_FOLDER" >> .env
          echo "YARN_GLOBAL_FOLDER=$YARN_GLOBAL_FOLDER" >> $GITHUB_ENV
      - name: Setup Node.js environment
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          node-version: lts/Hydrogen
          cache: yarn
          cache-dependency-path: '**/yarn.lock'
      - name: Override BASE_REF variable
        run: echo "BASE_REF=${{ startsWith(env.REF_NAME, 'release-') && vars.BASE_REF_NAME || inputs.head_ref || 'HEAD~1' }}" >> .env
      - name: Start Turbo Cache Server
        uses: rharkor/caching-for-turbo@c3de885e542eec7eb01eb1a6a59e97c7a2448615 # v1.6
        with:
          cache-prefix: ${{ vars.TURBO_CACHE_PREFIX }}
      - name: Install dependencies
        run: |
          yarn install
          yarn bootstrap
      - name: ${{ startsWith(env.REF_NAME, 'release-') && 'Stable' || 'Dark' }} Release
        uses: ./.github/actions/release
        with:
          strategy: ${{ startsWith(env.REF_NAME, 'release-') && 'stable' || 'build' }}
          tag: ${{ vars.RELEASE_TAG }}
          dry_run_publish: true
      - name: Push
        if: startsWith(env.REF_NAME, 'release-')
        run: git push
