name: Merge Check

on:
  push:
    branches:
      - renovate/*
  pull_request:
    branches-ignore: 
      - bitbucket
      - cherry-pick-*

jobs:
  install:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_TELEMETRY_DISABLED: 1
      YARN_ENABLE_HARDENED_MODE: 0
    steps:
      - name: Check out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Setup Node.js environment
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: lts/*
          cache: yarn
          cache-dependency-path: '**/yarn.lock'
      - name: Start Turbo Cache Server
        uses: rharkor/caching-for-turbo@2e8eba6ca57bfcd5619416cfd1ad79f581901040
        with:
          cache-prefix: ${{ vars.TURBO_CACHE_PREFIX }}
      - name: Install dependencies
        run: |
          yarn install
          yarn bootstrap
      # following step is only used for branch pushes from renovate workflow
      - name: Trigger post upgrade
        id: trigger
        if: failure() && startsWith(github.head_ref || github.ref_name, 'renovate/') && github.actor == 'renovate[bot]'
        uses: benc-uk/workflow-dispatch@25b02cc069be46d637e8fe2f1e8484008e9e9609 # v1
        with:
          workflow: renovate.yml
          inputs: '{ "ref": "${{ github.head_ref || github.ref }}" }'
          ref: ${{ github.head_ref }}

  ci:
    needs: install
    uses: ./.github/workflows/ci.yml
    with:
      base_ref: ${{ github.base_ref }}
    secrets: inherit

  finish:
    needs: [install, ci]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: 'Check status of all required jobs'
        run: |-
          NEEDS_CONTEXT='${{ toJson(needs) }}'
          JOB_IDS=$(echo "$NEEDS_CONTEXT" | jq -r 'keys[]')
          for JOB_ID in $JOB_IDS; do
            RESULT=$(echo "$NEEDS_CONTEXT" | jq -r ".[\"$JOB_ID\"].result")
            echo "$JOB_ID job result: $RESULT"
            if [[ "$RESULT" != "success" && "$RESULT" != "skipped" ]]; then
              echo "***"
              echo "Error: The $JOB_ID job did not pass."
              exit 1
            fi
          done
          echo "All jobs passed or were skipped."
    