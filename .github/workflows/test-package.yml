on:
  workflow_call:
    inputs:
      ref_name:
        type: string
      workspace:
        required: true
        type: string
      path:
        required: true
        type: string

jobs:
  deploy:
    name: Run Tests
    timeout-minutes: 20
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    environment: '${{ inputs.workspace }}/${{ matrix.os }}'
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_REMOTE_ONLY: true
      TURBO_VERBOSITY: ${{ vars.TURBO_VERBOSITY || '0' }}
      TURBO_ENV_MODE: ${{ vars.TURBO_ENV_MODE || 'strict' }}
      CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
      YARN_ENABLE_HARDENED_MODE: 0
    steps:
      - name: Check out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 50
          ref: ${{ inputs.ref_name || github.ref }}
      - name: Set Yarn global folder
        if: matrix.os == 'windows-latest'
        run: yarn config set globalFolder .temp/.yarn/berry
      - name: Setup Node.js environment
        if: matrix.os == 'ubuntu-latest'
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: lts/*
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Setup Node.js environment (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: lts/*
          cache: yarn
          cache-dependency-path: |
            yarn.lock
            yarnrc.yml
      - name: Install dependencies
        run: yarn install
      - name: Install Playwright
        run: yarn playwright install --with-deps chromium
      - name: Start Turbo Cache Server
        if: matrix.os == 'ubuntu-latest'
        uses: dtinth/setup-github-actions-caching-for-turbo@cc723b4600e40a6b8815b65701d8614b91e2669e # v1.3
      - name: Run Lint
        run: yarn workspace ${{ inputs.workspace }} turbo run lint --env-mode=${{ env.TURBO_ENV_MODE }} --verbosity=${{ env.TURBO_VERBOSITY }}
      - name: Run Coverage
        env:
          # Workaround for https://github.com/facebook/jest/issues/8536
          TEMP: ${{ runner.temp }}
        run: >-
          npx concurrently -k -s first -n "SB,TEST"
          "yarn workspace ${{ inputs.workspace }} turbo run start --env-mode=${{ env.TURBO_ENV_MODE }} --verbosity=${{ env.TURBO_VERBOSITY }} -- --silent"
          "npx wait-on $(yarn workspace ${{ inputs.workspace }} g:dotenv-get TARGET_URL | tail -n1) -l && yarn workspace ${{ inputs.workspace }} coverage"
      - name: Upload Coverage Reports
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4
        with:
          files: ${{ inputs.path }}/coverage/storybook/coverage-storybook.json
          flags: ${{ inputs.workspace }}
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run Chromatic
        run: yarn workspace ${{ inputs.workspace }} turbo run chromatic --env-mode=${{ env.TURBO_ENV_MODE }} --verbosity=${{ env.TURBO_VERBOSITY }}
